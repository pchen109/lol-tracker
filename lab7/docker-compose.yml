services:
  zookeeper:
    image: wurstmeister/zookeeper
  kafka:
    image: wurstmeister/kafka
    command: [start-kafka.sh]
    ports:
      - 9092:9092
    environment:
      KAFKA_CREATE_TOPICS: events:1:1   # topic_name:partition_num:replicas_num
      KAFKA_ADVERTISED_HOST_NAME: localhost
      KAFKA_LISTENERS: INSIDE://:29092,OUTSIDE://:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:29092,OUTSIDE://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1     # required if running single node cluster
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - zookeeper
  db:
    image: mysql
    environment:
      MYSQL_RANDOM_ROOT_PASSWORD: 1
      MYSQL_USER: riot
      MYSQL_PASSWORD: riot
      MYSQL_DATABASE: riot
      TZ: US/Pacific
    ports:
      - 3306:3306
    volumes:
      - my-db:/var/lib/mysql    # persistent data

volumes:
  my-db:                        # volume for data persistence