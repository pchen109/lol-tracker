- name: Deplloy LOL Tracker
  hosts: kekw-vm
  become: true

  vars:
    repo_url: "git@github.com:pchen109/lol-tracker.git"
    proj_det: "/home/kekw/lol-tracker"
    git_key_loc: "/home/kekw/.ssh/github_lol_tracker"
    proj_folder: "/home/kekw/lol-tracker/lab9"

  tasks:
    - name: Install dependencies and Run apt-get update
      ansible.builtin.apt:
        name:
          - git
          - ca-certificates
          - curl
        state: present    
        update_cache: yes                   # Equivlent as sudo apt-get update

    - name: Copy GitHub SSH Key to VM
      ansible.builtin.copy:
        src: "{{ git_key_loc }}"
        dest: "{{ git_key_loc }}"           # works b/c hostname is same as src
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"         # works b/c hostname is same as group name
        mode: 0600

    - name: Clone the repository from GitHub
      ansible.builtin.git:
        repo: "{{ repo_url }}"
        dest: "{{ proj_det }}"
        clone: yes                          # Clone the repository if it does not exist
        update: yes                         # Update the repository if it exists
        key_file: "{{ git_key_loc }}"
        accept_hostkey: true
        force: true                         # Match repo exactly same as the remote branch
      become: false                         # Clon the repo as user, not root

    # - name: Docker → reate apt keyrings directory
    #   ansible.builtin.file:
    #     path: /etc/apt/keyrings
    #     state: directory
    #     mode: '0755'

    # - name: Docker → Download GPG key
    #   ansible.builtin.get_url:
    #     url: https://download.docker.com/linux/ubuntu/gpg
    #     dest: /etc/apt/keyrings/docker.asc
    #     mode: '0644'

    # - name: Docker → Add repository
    #   ansible.builtin.shell:
    #     cmd: |
    #       echo "deb [arch=amd64 signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | tee /etc/apt/sources.list.d/docker.list > /dev/null
    #   become: true                        # need explicit sudo permissions

    # - name: Docker → Update cache after adding repo
    #   ansible.builtin.apt:
    #     update_cache: yes

    # - name: Docker → Install components   # need above first before installation
    #   ansible.builtin.apt:
    #     name:
    #       - docker-ce
    #       - docker-ce-cli
    #       - containerd.io
    #       - docker-buildx-plugin
    #       - docker-compose-plugin
    #     state: present

    # - name: Docker → Create group
    #   ansible.builtin.group:
    #     name: docker
    #     state: present

    # - name: Docker → Add user to group
    #   ansible.builtin.user:
    #     name: "{{ ansible_user }}"
    #     groups: docker
    #     append: yes
    #   become: true

    ############### CONFIGURATION ###############
    # - name: Remove _config folder
    #   ansible.builtin.file:
    #     path: "{{ proj_folder }}/_config"
    #     state: absent

    # - name: Recreate empty _config folder
    #   ansible.builtin.file:
    #     path: "{{ proj_folder }}/_config"
    #     state: directory
    #     mode: "0755"
    #     owner: "{{ ansible_user }}"
    #     group: "{{ ansible_user }}"

    # - name: Copy files from zprod_config folder to _config
    #   ansible.builtin.copy:
    #     src: "{{ proj_folder }}/zprod_config/{{ item }}"
    #     dest: "{{ proj_folder }}/_config/{{ item }}"
    #     owner: "{{ ansible_user }}"
    #     group: "{{ ansible_user }}"
    #     mode: "0644"
    #   loop:
    #     - analyzer_config.yml
    #     - logging_config.yml
    #     - processing_config.yml
    #     - receiver_config.yml
    #     - storage_config.yml

    ############### DATA ###############
    # - name: Create empty _data/processing folder
    #   ansible.builtin.file:
    #     path: "{{ proj_folder }}/_data/processing"
    #     state: directory
    #     owner: "{{ ansible_user }}"
    #     group: "{{ ansible_user }}"
    #     mode: "0755"

    # ### Data/anomaly/output.json ########################################
    # - name: Ensure data and processing directories exist on remote node
    #   ansible.builtin.file:
    #     path: /home/ubuntu/project/data/anomaly_detector
    #     state: directory
    #     owner: nobody
    #     group: nogroup
    #     mode: "0755"
        

    # - name: Copy output.json file to remote node
    #   ansible.builtin.copy:
    #     src: "/home/kekw/tim-lab/tim-assignment/data/anomaly_detector/output.json"
    #     dest: /home/ubuntu/project/data/anomaly 
    #     owner: nobody 
    #     group: nogroup 
    #     mode: "0644" 
    #     force: yes

    # ### Data/consistency_check/output.json ########################################
    # - name: Ensure data and processing directories exist on remote node
    #   ansible.builtin.file:
    #     path: /home/ubuntu/project/data/consistency_check
    #     state: directory
    #     owner: nobody
    #     group: nogroup
    #     mode: "0755"

    # - name: Copy output.json file to remote node
    #   ansible.builtin.copy:
    #     src: /home/kekw/tim-lab/tim-assignment/data/consistency_check/output.json
    #     dest: /home/ubuntu/project/data/consistency_check 
    #     owner: nobody 
    #     group: nogroup 
    #     mode: "0644" 
    #     force: yes

    # ### Logs ################################################################
    # - name: Copy logs folder to remote node
    #   ansible.builtin.copy:
    #     src: "/home/kekw/tim-lab/tim-assignment/logs"
    #     dest: /home/ubuntu/project/
    #     owner: nobody 
    #     group: nogroup 
    #     mode: "0755" 
    #     force: yes

    # - name: Set permissions on log files
    #   ansible.builtin.file:
    #     path: "/home/ubuntu/project/logs/{{ item }}"
    #     mode: "0644"
    #   loop:
    #     - analyzer.log
    #     - processing.log
    #     - receiver.log
    #     - storage.log
    #     - consistency_check.log
    #     - anomaly_detector.log

    # ### ENV ################################################################
    # - name: Copy env file to remote node
    #   ansible.builtin.copy:
    #     src: /home/kekw/tim-lab/tim-assignment/.env
    #     dest: /home/ubuntu/project/
    #     owner: nobody 
    #     group: nogroup 
    #     mode: "644" 

    # ### LAB 10 #############################################################
    # - name: Replace localhost with the IP address in script.js
    #   replace:
    #     path: /home/ubuntu/project/dashboard/updateStats.js
    #     regexp: 'localhost:(\d{4})'
    #     replace: "{{ instance_ip }}"

    # - name: Build Docker image
    #   command:
    #     cmd: "docker build -t dashboard-ui /home/ubuntu/project/dashboard"

    # ### Modify ports in docker compose yaml###############################
    # # - name: Remove ports section from processing service
    # #   lineinfile:
    # #     path: /home/ubuntu/project/docker-compose.yml
    # #     regexp: '^\s*ports:\s*\n^\s*-.*8100.*'
    # #     state: absent

    # # - name: Remove ports section from analyzer service
    # #   lineinfile:
    # #     path: /home/ubuntu/project/docker-compose.yml
    # #     regexp: '^\s*ports:\s*\n^\s*-.*8111.*'
    # #     state: absent

    # # - name: Remove ports section from consistency_check service
    # #   lineinfile:
    # #     path: /home/ubuntu/project/docker-compose.yml
    # #     regexp: '^\s*ports:\s*\n^\s*-.*7777.*'
    # #     state: absent

    # ### Docker Compose ####################################################
    # - name: Run Docker Compose to start the services
    #   ansible.builtin.shell:
    #     cmd: "docker compose up -d --build"
    #   args:
    #     chdir: "{{ proj_det }}"

    # - name: Wait for 10 seconds before retrying Docker Compose
    #   ansible.builtin.pause:
    #     seconds: 10


    # - name: Retry Docker Compose to ensure all services are up
    #   ansible.builtin.shell:
    #     cmd: "docker compose up -d --scale receiver=3"
    #   args:
    #     chdir: "{{ proj_det }}"
